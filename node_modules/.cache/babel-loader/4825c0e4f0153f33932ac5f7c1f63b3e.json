{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-todo/src/components/TodoList.js\";\nimport React from 'react';\n\nconst TodoList = ({\n  todos,\n  deleteTodo,\n  changeState\n}) => {\n  const toggle = (e, undone) => {\n    if (undone) {\n      e.target.checked = false;\n    } else {\n      e.target.checked = true;\n    }\n  };\n\n  const todoList = todos.length ? todos.map(todo => {\n    return React.createElement(\"li\", {\n      id: todo.id,\n      className: todo.undone ? \"new-todo\" : \"new-todo-done\",\n      key: todo.id,\n      onClick: e => {\n        changeState(e.target.parentElement.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, () => {\n      toggle(todo.undone);\n    }, {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"todo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, todo.content), React.createElement(\"div\", {\n      className: \"delete-button\",\n      onClick: () => {\n        deleteTodo(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  return React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, todoList);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/user/Desktop/react-todo/src/components/TodoList.js"],"names":["React","TodoList","todos","deleteTodo","changeState","toggle","e","undone","target","checked","todoList","length","map","todo","id","parentElement","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AAEvD,QAAMC,MAAM,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAC5B,QAAIA,MAAJ,EAAY;AACVD,MAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GAAmB,KAAnB;AACD,KAFD,MAGK;AACHH,MAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GAAmB,IAAnB;AACD;AACF,GAPD;;AASA,QAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,GACfT,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;AAChB,WACE;AAAI,MAAA,EAAE,EAAEA,IAAI,CAACC,EAAb;AAAiB,MAAA,SAAS,EAAED,IAAI,CAACN,MAAL,GAAe,UAAf,GAA8B,eAA1D;AAA4E,MAAA,GAAG,EAAEM,IAAI,CAACC,EAAtF;AAA0F,MAAA,OAAO,EAAGR,CAAD,IAAO;AAAEF,QAAAA,WAAW,CAACE,CAAC,CAACE,MAAF,CAASO,aAAT,CAAuBD,EAAxB,CAAX;AAAwC,OAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CAAW,MAAM;AAAET,MAAAA,MAAM,CAACQ,IAAI,CAACN,MAAN,CAAN;AAAqB,KAAxC;AAA0C,MAAA,IAAI,EAAC,UAA/C;AAA0D,MAAA,SAAS,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BM,IAAI,CAACG,OAAhC,CAHF,EAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAE,MAAM;AAAEb,QAAAA,UAAU,CAACU,IAAI,CAACC,EAAN,CAAV;AAAqB,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD,GATD,CADe,GAYb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ;AAgBA,SACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAhCD;;AAoCA,eAAeT,QAAf","sourcesContent":["import React from 'react'\n\nconst TodoList = ({ todos, deleteTodo, changeState }) => {\n\n  const toggle = (e, undone) => {\n    if (undone) {\n      e.target.checked = false;\n    }\n    else {\n      e.target.checked = true;\n    }\n  }\n\n  const todoList = todos.length ? (\n    todos.map(todo => {\n      return (\n        <li id={todo.id} className={todo.undone ? (\"new-todo\") : (\"new-todo-done\")} key={todo.id} onClick={(e) => { changeState(e.target.parentElement.id) }}>\n          <input {...() => { toggle(todo.undone) }} type=\"checkbox\" className=\"checkbox\"></input>\n          <span className=\"custom-checkbox\"></span>\n          <h2 className=\"todo-text\">{todo.content}</h2>\n          <div className=\"delete-button\" onClick={() => { deleteTodo(todo.id) }}></div>\n        </li>\n      )\n    })\n  ) : (\n      <div></div>\n    );\n\n\n  return (\n    <ul className=\"todo-list\">\n      {todoList}\n    </ul>\n  )\n}\n\n\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}